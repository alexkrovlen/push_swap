static t_head *do_it(int *str, int count)
{
	t_head	*head;
	int		i;
	t_stack	*list;
	t_stack	*temp;

	i = 0;
	head = (t_head *)ft_memalloc(sizeof(t_head));
	//if (head == NULL)
	//	exit_error();
	//head->stack = (t_stack *)ft_memalloc(sizeof(t_stack) * count);
	head->size = count;
	//printf("count = %d\n", count);
	list = (t_stack *)ft_memalloc(sizeof(t_stack));
	temp = list;
	while (i < count)
	{
		//printf("?\n");
		//printf("str[i] = %d\n", str[i]);
		list = (t_stack *)ft_memalloc(sizeof(t_stack));
		list->value = str[i];
		//printf("value = %d\n", list->value);
		list = list->next;
		i++;
		
	}
	//printf("%%\n");
	list = NULL;
	list = temp;
	/*
	while (list != NULL)
	{
		printf("value = %d\n", list->value);
		list = list->next;
	}
	*/
	return (head);
}





ANDREY !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


/*static void		lstadd(t_head *head, t_stack *list)
{
	if (list == NULL)
		return ;
	if (head->stack != NULL)
	{
		list->next = head->stack;
		(head->stack)->next = list;
	}
	head->stack = list;
}
*/
static t_stack	*get_new_list(int val, t_stack *head)
{
	t_stack *list;

    list = (t_stack *)ft_memalloc(sizeof(t_stack));
    list->value = val;
	list->index = 0;
	list->next = NULL;
    head->next = list; //or NULL? what dif?
    return (list);
}

static t_head	*do_it(int *str, int count)
{
	t_head	*head;
	int		i;
	t_stack	*list;
	t_stack *tmp;

	i = 0;
	list = NULL;
	head = (t_head *)ft_memalloc(sizeof(t_head));
	list = (t_stack *)ft_memalloc(sizeof(t_stack));
	tmp = list;
    list->value = str[i++];
	list->index = 0;
	list->next = NULL;
	head->size = count;
	while (i < count)
	{
		list = get_new_list(str[i], list);
		//printf("value = %d\ni = %d\n", list->value, i);
		i++;
	}
	//list = NULL;
	head->stack = tmp;
	return (head);
}








MY!!!!!!!!!!!!!!!!!!!!!!!

static void		lstadd(t_head *head, t_stack *list)
{
	if (list == NULL)
		return ;
	if (head->stack != NULL)
	{
		list->next = head->stack;
		(head->stack)->next = list;
	}
	head->stack = list;
}

static t_stack	*get_new_list(int val)
{
	t_stack *list;

    list = (t_stack *)ft_memalloc(sizeof(t_stack));
    list->value = val;
	list->index = 0;
    list->next = NULL; //or NULL? what dif?
    return (list);
}

static t_head	*do_it(int *str, int count)
{
	t_head	*head;
	int		i;
	t_stack	*list;
	t_stack	*temp;

	i = 0;
	list = NULL;
	head = (t_head *)ft_memalloc(sizeof(t_head));
	head->size = count;
	while (i < count)
	{
		list = get_new_list(str[i]);
		//printf("value = %d\ni = %d\n", list->value, i);
		lstadd(head, list);
		if (i == 0)
			temp = head->stack;
		i++;
	}
	//list = NULL;
	head->stack = temp;
	return (head);
}

















instruction



/*
t_stack *rr_a_b(t_stack *stack)
{
    t_stack *last;
    t_stack *first;
    t_stack *prev;

    first = stack;
    prev = first;
    if (!stack)
        return (stack);
    if (!stack->next)
        return (stack);
    while (stack->next != NULL)
    {
        prev = stack;
        stack = stack->next;
    }
    last = stack;
    last->next = first;
    prev->next = NULL;
    return (last);
	*/